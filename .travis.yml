dist: xenial
language: php
sudo: false

php:
  - '7.1'
  - '7.2'
  - '7.3'
  - '7.4snapshot'

env:
  global:
    - DATABASE_DRIVER=pdo_mysql
    - DATABASE_URL=mysql://mail_test:password@127.0.0.1:3306/mail_test
    - APP_ENV=test
    - APP_SECRET=165e25e3846534bb4665d7078a851c0b
    - MAILER_URL=smtp://localhost:25?encryption=&auth_mode=
    - MAILER_DELIVERY_ADDRESS=admin@example.org
    - APP_NAME="Userli"
    - APP_URL="https://users.example.org"
    - PROJECT_NAME="example.org"
    - PROJECT_URL="https://www.example.org"
    - DOMAIN="example.org"
    - SENDER_ADDRESS="admin@example.org"
    - NOTIFICATION_ADDRESS="monitoring@example.org"
    - SEND_MAIL=1
    - LOCALE="de"
    - HAS_SINA_BOX=0
    - MAIL_CRYPT_ENABLED=1
    - MAIL_CRYPT_AUTO=1

cache:
  directories:
    - $HOME/.composer/cache/files

services:
  - mysql

before_install:
  - if [ ${DATABASE_DRIVER} = 'pdo_mysql' ]; then
      mysql -e 'CREATE DATABASE mail_test;';
      mysql -e "CREATE USER 'mail_test'@'localhost' IDENTIFIED BY 'password';";
      mysql -e "GRANT ALL PRIVILEGES on mail_test.* to mail_test@localhost;";
    fi
  - if [ ${DATABASE_DRIVER} = 'pdo_pgsql' ]; then
      sudo -u postgres createuser -d mail_test;
      sudo -u postgres createdb -O mail_test mail_test;
    fi
  - sudo apt-get install openssl
  - if [ $(phpenv version-name) != "7.3" ]; then
      sudo add-apt-repository -y ppa:ondrej/php;
      sudo apt-get -qq update;
      sudo apt-get install -y libsodium-dev;
    fi

install:
  - if [ $(phpenv version-name) != "7.3" ]; then pecl install libsodium; fi
  - composer install

matrix:
  include:
    - script: make integration
      name: Integration with sqlite
      env:
        - DATABASE_DRIVER=pdo_sqlite
        - DATABASE_URL=sqlite:///%kernel.project_dir%/var/db_test.sqlite

    - script: make integration
      name: Integration with MySQL
      if: branch = master
      env:
        - DATABASE_DRIVER=pdo_mysql
        - DATABASE_URL=mysql://mail_test:password@127.0.0.1:3306/mail_test

    - script: make integration
      name: Integration with PostgreSQL
      if: branch = master
      env:
        - DATABASE_DRIVER=pdo_pgsql
        - DATABASE_URL=pgsql://mail_test:password@127.0.0.1:5432/mail_test
      services:
        - postgresql

    - script: make security-check
      name: Run symfony security checks

    - script: bin/phpunit --coverage-clover=coverage.xml
      name: calculate code coverage
      after_success: bash <(curl -s https://codecov.io/bash)
