security:
    providers:
        user:
            id: App\Security\UserProvider

    encoders:
        App\Entity\User:
            algorithm: argon2i
        legacy:
            id: 'App\Security\Encoder\PasswordHashEncoder'

    role_hierarchy:
        # User
        ROLE_USERLI_ADMIN_USER_READER:
            - ROLE_USERLI_ADMIN_USER_LIST
            - ROLE_USERLI_ADMIN_USER_VIEW
        ROLE_USERLI_ADMIN_USER_EDITOR:
            - ROLE_USERLI_ADMIN_USER_CREATE
            - ROLE_USERLI_ADMIN_USER_EDIT
        ROLE_USERLI_ADMIN_USER_ADMIN:
            - ROLE_USERLI_ADMIN_USER_LIST
            - ROLE_USERLI_ADMIN_USER_VIEW
            - ROLE_USERLI_ADMIN_USER_CREATE
            - ROLE_USERLI_ADMIN_USER_EDIT
            - ROLE_USERLI_ADMIN_USER_DELETE

        # Alias
        ROLE_USERLI_ADMIN_ALIAS_READER:
            - ROLE_USERLI_ADMIN_ALIAS_LIST
            - ROLE_USERLI_ADMIN_ALIAS_VIEW
        ROLE_USERLI_ADMIN_ALIAS_EDITOR:
            - ROLE_USERLI_ADMIN_ALIAS_CREATE
            - ROLE_USERLI_ADMIN_ALIAS_EDIT
        ROLE_USERLI_ADMIN_ALIAS_ADMIN:
            - ROLE_USERLI_ADMIN_ALIAS_LIST
            - ROLE_USERLI_ADMIN_ALIAS_VIEW
            - ROLE_USERLI_ADMIN_ALIAS_CREATE
            - ROLE_USERLI_ADMIN_ALIAS_EDIT
            - ROLE_USERLI_ADMIN_ALIAS_DELETE

        # Domain
        ROLE_USERLI_ADMIN_DOMAIN_READER:
            - ROLE_USERLI_ADMIN_DOMAIN_LIST
            - ROLE_USERLI_ADMIN_DOMAIN_VIEW
        ROLE_USERLI_ADMIN_DOMAIN_EDITOR:
            - ROLE_USERLI_ADMIN_DOMAIN_CREATE
            - ROLE_USERLI_ADMIN_DOMAIN_EDIT
        ROLE_USERLI_ADMIN_DOMAIN_ADMIN:
            - ROLE_USERLI_ADMIN_DOMAIN_ALL

        # Voucher
        ROLE_USERLI_ADMIN_VOUCHER_READER:
            - ROLE_USERLI_ADMIN_VOUCHER_LIST
            - ROLE_USERLI_ADMIN_VOUCHER_VIEW
        ROLE_USERLI_ADMIN_VOUCHER_EDITOR:
            - ROLE_USERLI_ADMIN_VOUCHER_CREATE
            - ROLE_USERLI_ADMIN_VOUCHER_EDIT
        ROLE_USERLI_ADMIN_VOUCHER_ADMIN:
            - ROLE_USERLI_ADMIN_VOUCHER_ALL

        # Reserved Name
        ROLE_USERLI_ADMIN_RESERVEDNAME_READER:
            - ROLE_USERLI_ADMIN_RESERVEDNAME_LIST
            - ROLE_USERLI_ADMIN_RESERVEDNAME_VIEW
        ROLE_USERLI_ADMIN_RESERVEDNAME_EDITOR:
            - ROLE_USERLI_ADMIN_RESERVEDNAME_CREATE
            - ROLE_USERLI_ADMIN_RESERVEDNAME_EDIT
        ROLE_USERLI_ADMIN_RESERVEDNAME_ADMIN:
            - ROLE_USERLI_ADMIN_RESERVEDNAME_ALL

        # Spam account is always suspicious
        ROLE_SPAM:
            - ROLE_SUSPICIOUS

        ROLE_SUPPORT:
            - ROLE_USER
        ROLE_DOMAIN_ADMIN:
            - ROLE_SUPPORT
            - ROLE_SONATA_ADMIN
            - ROLE_USERLI_ADMIN_USER_ADMIN
            - ROLE_USERLI_ADMIN_ALIAS_ADMIN
        ROLE_ADMIN:
            - ROLE_DOMAIN_ADMIN
            - ROLE_USERLI_ADMIN_DOMAIN_ADMIN
            - ROLE_USERLI_ADMIN_VOUCHER_ADMIN
            - ROLE_USERLI_ADMIN_RESERVEDNAME_ADMIN
        ROLE_SUPER_ADMIN:
            - ROLE_ADMIN
            - ROLE_ALLOWED_TO_SWITCH

    access_decision_manager:
        strategy: unanimous

    firewalls:
        dev:
            pattern: ^/(_(profiler|error|wdt)|css|images|js)/
            security: false

        default:
            pattern:   ^/
            anonymous: ~
            form_login:
                require_previous_session: false
            logout:
                success_handler: App\Handler\LogoutSuccessHandler
                invalidate_session: false

    access_control:
      - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
      - { path: ^/recovery, roles: IS_AUTHENTICATED_ANONYMOUSLY }
      - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
      - { path: ^/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
      - { path: ^/admin, roles: ROLE_DOMAIN_ADMIN }
      - { path: ^/voucher, roles: ROLE_USER, allow_if: "!has_role('ROLE_SUSPICIOUS')"}
      - { path: ^/alias, roles: ROLE_USER, allow_if: "!has_role('ROLE_SPAM')"}
      - { path: ^/account, roles: ROLE_USER, allow_if: "!has_role('ROLE_SPAM')"}
      - { path: ^/, roles: ROLE_USER }
